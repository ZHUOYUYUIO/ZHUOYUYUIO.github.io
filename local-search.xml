<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>mesa-geo introduction(2)</title>
    <link href="/2024/12/15/mesa-geo-intro-(2)/"/>
    <url>/2024/12/15/mesa-geo-intro-(2)/</url>
    
    <content type="html"><![CDATA[<h1 id="tutorial-mesa-geo-simulation-of-national-attack-and-defense-in-war"><a class="markdownIt-Anchor" href="#tutorial-mesa-geo-simulation-of-national-attack-and-defense-in-war"></a> tutorial: mesa-geo Simulation of national attack and defense in war</h1><p>This tutorial designs three types of agents: German Army Agent, French Army Agent, and Region Agent. It aims to simulate the processes of engagement and defense through the method of Agent-Based Modeling (ABM).</p><h2 id="import-the-packages"><a class="markdownIt-Anchor" href="#import-the-packages"></a> import the packages</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">import</span> mesa<br><span class="hljs-keyword">import</span> mesa_geo <span class="hljs-keyword">as</span> mg<br><span class="hljs-keyword">import</span> mesa_geo.visualization <span class="hljs-keyword">as</span> mgv<br><span class="hljs-keyword">from</span> shapely.geometry <span class="hljs-keyword">import</span> Point<br></code></pre></td></tr></table></figure><h2 id="define-the-german-agentattack-agent"><a class="markdownIt-Anchor" href="#define-the-german-agentattack-agent"></a> define the german agent(attack agent)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">german_army</span>(mg.GeoAgent):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, unique_id, model, geometry, crs ,attack_value, attack_speed, soldier_number,enermy_distance, wartype=<span class="hljs-string">&quot;prepared&quot;</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__(unique_id, model, geometry, crs)<br>        <span class="hljs-variable language_">self</span>.breed=<span class="hljs-string">&quot;german_army&quot;</span><br>        <span class="hljs-variable language_">self</span>.attack_value=attack_value<br>        <span class="hljs-variable language_">self</span>.attack_speed=attack_speed<br>        <span class="hljs-variable language_">self</span>.soldier_number=soldier_number<br>        <span class="hljs-variable language_">self</span>.enermy_distance=enermy_distance<br>        <span class="hljs-variable language_">self</span>.wartype= wartype<br>        <span class="hljs-variable language_">self</span>.set_place=<span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>): <br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;german_army &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-variable language_">self</span>.unique_id)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">calculate_distance</span>(<span class="hljs-params">self,x</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>.model.space.distance(<span class="hljs-variable language_">self</span>, x)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.wartype==<span class="hljs-string">&quot;prepared&quot;</span>:<br>        <span class="hljs-comment">#When encountering the French army, it will approach and engage in battle with them.</span><br>            neighbors=<span class="hljs-variable language_">self</span>.model.space.get_neighbors_within_distance(<span class="hljs-variable language_">self</span>,<span class="hljs-variable language_">self</span>.enermy_distance)<br>            neighbors_setplace=<span class="hljs-variable language_">self</span>.model.space.get_neighbors_within_distance(<span class="hljs-variable language_">self</span>,<span class="hljs-number">2000000</span>)<br>            enermy_army_neighbors=[]<br>            <span class="hljs-keyword">for</span> agent <span class="hljs-keyword">in</span> neighbors:<br>                <span class="hljs-keyword">if</span> agent <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> agent.breed==<span class="hljs-string">&quot;France_army&quot;</span> <span class="hljs-keyword">and</span> agent.wartype!=<span class="hljs-string">&quot;dead&quot;</span>:<br>                    enermy_army_neighbors.append(agent)<br>            <span class="hljs-keyword">if</span> enermy_army_neighbors <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                <span class="hljs-comment">#Proceed to the nearest base location.</span><br>                set_neighbors=[]<br>                <span class="hljs-keyword">for</span> agent <span class="hljs-keyword">in</span> neighbors_setplace:<br>                    <span class="hljs-keyword">if</span> agent.wartype==<span class="hljs-string">&quot;set_a_place&quot;</span>:<br>                        set_neighbors.append(agent)<br>                closest_set = <span class="hljs-built_in">min</span>(set_neighbors, key=<span class="hljs-keyword">lambda</span> x: <span class="hljs-variable language_">self</span>.calculate_distance(x))<br>            <span class="hljs-comment">#go to the place near that：</span><br>                x0=closest_set.geometry.x<br>                y0=closest_set.geometry.y<br>                x_moveto = x0 + <span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">100</span>,<span class="hljs-number">200</span>)<br>                y_moveto = y0 + <span class="hljs-variable language_">self</span>.random.random(<span class="hljs-number">100</span>,<span class="hljs-number">200</span>)<br>                <span class="hljs-variable language_">self</span>.geometry=Point(x_moveto,y_moveto)<br><br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">if</span> enermy_army_neighbors:<br>            <span class="hljs-comment">#To select the nearest army and move towards its vicinity, you can use a combination of the min function and a lambda function</span><br>                    closest_enermy = <span class="hljs-built_in">min</span>(enermy_army_neighbors, key=<span class="hljs-keyword">lambda</span> x: <span class="hljs-variable language_">self</span>.calculate_distance(x))<br>              <br>                    x0=closest_enermy.geometry.x<br>                    y0=closest_enermy.geometry.y<br>                    x_moveto = x0 + <span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">100</span>,<span class="hljs-number">200</span>)<br>                    y_moveto = y0 + <span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">100</span>,<span class="hljs-number">200</span>)<br>                    <span class="hljs-variable language_">self</span>.geometry=Point(x_moveto,y_moveto)<br>                    <span class="hljs-comment">#To compare numerical values with the French army, and if victorious, stay for a step to set up a stronghold (transition to stronghold status), you would typically need to implement some game logic that involves combat resolution and state transitions. Here’s a conceptual outline in Python-like pseudocode</span><br>                    <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.attack_speed &gt; closest_enermy.attack_speed:<br>                        closest_enermy.soldier_number= closest_enermy.soldier_number-<span class="hljs-number">1.5</span>*<span class="hljs-variable language_">self</span>.attack_value*<span class="hljs-variable language_">self</span>.soldier_number<br>                        <span class="hljs-variable language_">self</span>.soldier_number=<span class="hljs-variable language_">self</span>.soldier_number-<span class="hljs-variable language_">self</span>.attack_value*<span class="hljs-variable language_">self</span>.soldier_number<br>                    <span class="hljs-keyword">else</span>:<br>                        closest_enermy.soldier_number= closest_enermy.soldier_number-<span class="hljs-number">0.8</span>*<span class="hljs-variable language_">self</span>.attack_value*<span class="hljs-variable language_">self</span>.soldier_number<br>                        <span class="hljs-variable language_">self</span>.soldier_number=<span class="hljs-variable language_">self</span>.soldier_number-<span class="hljs-variable language_">self</span>.attack_value*<span class="hljs-variable language_">self</span>.soldier_number<br><br>                    <span class="hljs-keyword">if</span> closest_enermy.soldier_number&lt;=<span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-variable language_">self</span>.soldier_number &gt; <span class="hljs-number">0</span>:<br>                        closest_enermy.wartype=<span class="hljs-string">&quot;dead&quot;</span><br>                        <span class="hljs-variable language_">self</span>.wartype=<span class="hljs-string">&quot;set_a_place&quot;</span><br>                        <span class="hljs-variable language_">self</span>.set_place=<span class="hljs-variable language_">self</span>.set_place+<span class="hljs-number">1</span><br>                    <span class="hljs-keyword">elif</span> closest_enermy.soldier_number&lt;=<span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-variable language_">self</span>.soldier_number &lt;= <span class="hljs-number">0</span>:<br>                        <span class="hljs-variable language_">self</span>.wartype=<span class="hljs-string">&quot;dead&quot;</span><br>                        closest_enermy.wartype=<span class="hljs-string">&quot;dead&quot;</span><br>                    <span class="hljs-keyword">elif</span> closest_enermy.soldier_number &gt;<span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-variable language_">self</span>.soldier_number &lt;= <span class="hljs-number">0</span>:<br>                        <span class="hljs-variable language_">self</span>.wartype=<span class="hljs-string">&quot;dead&quot;</span><br>                        closest_enermy.wartype=<span class="hljs-string">&quot;prepared&quot;</span><br>                    <span class="hljs-keyword">elif</span> closest_enermy.soldier_number &gt;<span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-variable language_">self</span>.soldier_number &gt; <span class="hljs-number">0</span>:<br>                        closest_enermy.wartype=<span class="hljs-string">&quot;in_war&quot;</span><br>                        <span class="hljs-variable language_">self</span>.wartype=<span class="hljs-string">&quot;in_war&quot;</span><br>                <br>            <br>        <span class="hljs-keyword">elif</span> <span class="hljs-variable language_">self</span>.wartype==<span class="hljs-string">&quot;in_war&quot;</span>:<br>            neighbors=<span class="hljs-variable language_">self</span>.model.space.get_neighbors_within_distance(<span class="hljs-variable language_">self</span>,<span class="hljs-number">500</span>)<br>            fclosest_enermy=[neighbor <span class="hljs-keyword">for</span> neighbor <span class="hljs-keyword">in</span> neighbors <span class="hljs-keyword">if</span> neighbor.breed==<span class="hljs-string">&quot;France_army&quot;</span>]<br>            <span class="hljs-keyword">if</span> fclosest_enermy:  <br>                closest_enermy = fclosest_enermy[<span class="hljs-number">0</span>]  <br>            <span class="hljs-keyword">else</span>:  <br>                closest_enermy = <span class="hljs-literal">None</span>  <br><br>            closest_enermy.soldier_number= closest_enermy.soldier_number-<span class="hljs-variable language_">self</span>.attack_value*<span class="hljs-variable language_">self</span>.soldier_number<br>            <span class="hljs-variable language_">self</span>.soldier_number=<span class="hljs-variable language_">self</span>.soldier_number-<span class="hljs-variable language_">self</span>.attack_value*<span class="hljs-variable language_">self</span>.soldier_number<br><br>            <span class="hljs-keyword">if</span> closest_enermy.soldier_number&lt;=<span class="hljs-number">0</span>:<br>                closest_enermy.wartype=<span class="hljs-string">&quot;dead&quot;</span><br>                <span class="hljs-variable language_">self</span>.wartype=<span class="hljs-string">&quot;set_a_place&quot;</span><br>            <span class="hljs-keyword">elif</span> closest_enermy.soldier_number &gt;<span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-variable language_">self</span>.soldier_number &lt;= <span class="hljs-number">0</span>:<br>                <span class="hljs-variable language_">self</span>.wartype=<span class="hljs-string">&quot;dead&quot;</span><br>                closest_enermy.wartype=<span class="hljs-string">&quot;prepared&quot;</span><br>            <span class="hljs-keyword">elif</span> closest_enermy.soldier_number &gt;<span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-variable language_">self</span>.soldier_number &gt; <span class="hljs-number">0</span>:<br>                closest_enermy.wartype=<span class="hljs-string">&quot;in_war&quot;</span><br>                <span class="hljs-variable language_">self</span>.wartype=<span class="hljs-string">&quot;in_war&quot;</span>  <br><br>        <span class="hljs-keyword">elif</span> <span class="hljs-variable language_">self</span>.wartype==<span class="hljs-string">&quot;set_a_place&quot;</span>:<br>            <span class="hljs-variable language_">self</span>.set_place=<span class="hljs-variable language_">self</span>.set_place+<span class="hljs-number">1</span><br><br>            <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.set_place &gt;=<span class="hljs-number">2</span>:<br>                <br>                <span class="hljs-variable language_">self</span>.soldier_number=<span class="hljs-variable language_">self</span>.soldier_number*<span class="hljs-number">1.2</span><br>                <span class="hljs-variable language_">self</span>.wartype=<span class="hljs-string">&quot;prepared&quot;</span><br><br><br>        <br>        <br>        <span class="hljs-variable language_">self</span>.model.counts[<span class="hljs-variable language_">self</span>.wartype] = <span class="hljs-variable language_">self</span>.model.counts[<span class="hljs-variable language_">self</span>.wartype]+<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h2 id="define-the-french-class-for-defence"><a class="markdownIt-Anchor" href="#define-the-french-class-for-defence"></a> define the french class for defence</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs pyhon">class france_army(mg.GeoAgent):<br>    def __init__(self, unique_id, model, geometry, crs,soldier_number,attack_speed):<br>        super().__init__(unique_id, model, geometry, crs)<br>        self.breed = &quot;France_army&quot;<br>        self.soldier_number=soldier_number<br>        self.attack_speed=attack_speed<br>        self.wartype= &quot;prepared&quot;<br><br>    def __repr__(self): <br>        return &quot;german_army &quot; + str(self.unique_id)<br>    <br>    def step(self):<br>        #有新的援兵动员<br>        if self.wartype==&quot;in_war&quot;:<br>            self.soldier_number=self.soldier_number*1.5<br>        elif self.wartype==&quot;prepared&quot;:<br>            self.soldier_number=self.soldier_number<br>        <br>        self.model.counts[self.wartype] += 1<br></code></pre></td></tr></table></figure><h2 id="to-set-up-region-agent-in-border-area"><a class="markdownIt-Anchor" href="#to-set-up-region-agent-in-border-area"></a> To set up region agent in border area</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">regionAgent</span>(mg.GeoAgent):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,unique_id, model, geometry, crs,wartype=<span class="hljs-string">&quot;not in war&quot;</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__(unique_id, model, geometry, crs)<br>        <span class="hljs-variable language_">self</span>.breed=<span class="hljs-string">&quot;region&quot;</span><br><br>        <span class="hljs-variable language_">self</span>.wartype=wartype<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Neighbourhood &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-variable language_">self</span>.unique_id)<br><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">hotspot</span>(<span class="hljs-params">self</span>):<br>        neighbors = <span class="hljs-variable language_">self</span>.model.space.get_intersecting_agents(<span class="hljs-variable language_">self</span>)<br>        waragent = [<br>            agent <span class="hljs-keyword">for</span> agent <span class="hljs-keyword">in</span> neighbors <span class="hljs-keyword">if</span> agent.wartype == <span class="hljs-string">&quot;in_war&quot;</span><span class="hljs-keyword">or</span> agent.wartype==<span class="hljs-string">&quot;set_a_place&quot;</span><br>        ]<br>        <span class="hljs-keyword">if</span> waragent:<br>            <span class="hljs-variable language_">self</span>.wartype=<span class="hljs-string">&quot;region in war&quot;</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-variable language_">self</span>.wartype=<span class="hljs-string">&quot;not in war&quot;</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-variable language_">self</span>.hotspot()<br>        <span class="hljs-variable language_">self</span>.model.counts[<span class="hljs-variable language_">self</span>.wartype] += <span class="hljs-number">1</span><br><br>```    <br>    <br><br><br>```python<br>model function to count <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_in_war_count</span>(<span class="hljs-params">model</span>):<br>    <span class="hljs-keyword">return</span> model.counts[<span class="hljs-string">&quot;in_war&quot;</span>]<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_set_a_place_count</span>(<span class="hljs-params">model</span>):<br>    <span class="hljs-keyword">return</span> model.counts[<span class="hljs-string">&quot;set_a_place&quot;</span>]<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_prepared_count</span>(<span class="hljs-params">model</span>):<br>    <span class="hljs-keyword">return</span> model.counts[<span class="hljs-string">&quot;prepared&quot;</span>]<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_dead_count</span>(<span class="hljs-params">model</span>):<br>    <span class="hljs-keyword">return</span> model.counts[<span class="hljs-string">&quot;dead&quot;</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_region_in_war_count</span>(<span class="hljs-params">model</span>): <br>    <span class="hljs-keyword">return</span> model.counts[<span class="hljs-string">&quot;region in war&quot;</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_region_not_in_war</span>(<span class="hljs-params">model</span>):<br>    <span class="hljs-keyword">return</span> model.counts[<span class="hljs-string">&quot;not in war&quot;</span>]<br><br></code></pre></td></tr></table></figure><h2 id="define-the-battle-model"><a class="markdownIt-Anchor" href="#define-the-battle-model"></a> define the battle model</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">warmodel</span>(mesa.Model):<br><br>    geojson_regions = <span class="hljs-string">&quot;\german.geojson&quot;</span><br>    unique_id = <span class="hljs-string">&quot;regionnum&quot;</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,german_army_size=<span class="hljs-number">60</span>,france_army_size=<span class="hljs-number">60</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br>        <span class="hljs-variable language_">self</span>.german_army_size=german_army_size<br>        <span class="hljs-variable language_">self</span>.france_army_size=france_army_size<br><br>        <span class="hljs-variable language_">self</span>.schedule = mesa.time.RandomActivationByType(<span class="hljs-variable language_">self</span>)<br>        <span class="hljs-variable language_">self</span>.space = mg.GeoSpace(warn_crs_conversion=<span class="hljs-literal">False</span>)<br><br>        <span class="hljs-variable language_">self</span>.counts = <span class="hljs-literal">None</span> <span class="hljs-comment">#added</span><br>        <span class="hljs-variable language_">self</span>.reset_counts() <span class="hljs-comment">#added</span><br><br>        <span class="hljs-variable language_">self</span>.datacollector = mesa.DataCollector(<br>            &#123;<br>                <span class="hljs-string">&quot;in_war&quot;</span>: get_in_war_count,<br>                <span class="hljs-string">&quot;set_a_place&quot;</span>:get_set_a_place_count,<br>                <span class="hljs-string">&quot;prepared&quot;</span>: get_prepared_count,<br>                <span class="hljs-string">&quot;dead&quot;</span>: get_dead_count,<br>                <span class="hljs-string">&quot;region in war&quot;</span>:get_region_in_war_count,<br>                <span class="hljs-string">&quot;not in war&quot;</span>:get_region_not_in_war<br><br>            &#125;<br>        )<br><br>        ac = mg.AgentCreator(regionAgent, model=<span class="hljs-variable language_">self</span>)<br><br>        region_agents=ac.from_file(<br>            <span class="hljs-variable language_">self</span>.geojson_regions, unique_id=<span class="hljs-variable language_">self</span>.unique_id<br>        )           <br>        <br>        <span class="hljs-variable language_">self</span>.space.add_agents(region_agents)<br>        <span class="hljs-keyword">for</span> agent <span class="hljs-keyword">in</span> region_agents:<br>            <span class="hljs-variable language_">self</span>.schedule.add(agent)<br><br>    <span class="hljs-comment">#put agents in the regions</span><br><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(german_army_size):<br>            attack_value=<span class="hljs-number">0.6</span> + <span class="hljs-variable language_">self</span>.random.random() * <span class="hljs-number">0.5</span> <br>            attack_speed= <span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">8</span>,<span class="hljs-number">20</span>)<br>            soldier_number=<span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">3000</span>,<span class="hljs-number">6000</span>)<br>            enermy_distance=<span class="hljs-number">90000</span><br><br>            unique_german_army = mg.AgentCreator(<br>            german_army,<br>            model=<span class="hljs-variable language_">self</span>,<br>            crs=<span class="hljs-variable language_">self</span>.space.crs,<br>            agent_kwargs=&#123;<span class="hljs-string">&quot;attack_value&quot;</span>: attack_value, <br>             <span class="hljs-string">&quot;attack_speed&quot;</span>:attack_speed,<br>             <span class="hljs-string">&quot;soldier_number&quot;</span>:soldier_number,<br>             <span class="hljs-string">&quot;enermy_distance&quot;</span>: enermy_distance<br>             &#125;<br>            )<br><br>            x_home, y_home = <span class="hljs-variable language_">self</span>.find_home(region_agents,<span class="hljs-string">&quot;german&quot;</span>)<br><br>            german_army_agent = unique_german_army.create_agent(<br>                Point(x_home, y_home), <span class="hljs-string">&quot;G&quot;</span> + <span class="hljs-built_in">str</span>(i), <br>            )<br>            <span class="hljs-variable language_">self</span>.space.add_agents(german_army_agent)<br>            <span class="hljs-variable language_">self</span>.schedule.add(german_army_agent)   <br><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(france_army_size):<br><br>            attack_speed= <span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">6</span>,<span class="hljs-number">10</span>)<br>            soldier_number=<span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">4000</span>,<span class="hljs-number">8000</span>)<br><br>            unique_german_army = mg.AgentCreator(<br>            france_army,<br>            model=<span class="hljs-variable language_">self</span>,<br>            crs=<span class="hljs-variable language_">self</span>.space.crs,<br>            agent_kwargs=&#123;<br>             <span class="hljs-string">&quot;attack_speed&quot;</span>:attack_speed,<br>             <span class="hljs-string">&quot;soldier_number&quot;</span>:soldier_number<br>             &#125;<br>            )<br><br>            x_home, y_home = <span class="hljs-variable language_">self</span>.find_home(region_agents,<span class="hljs-string">&quot;france&quot;</span>)<br> <br>            france_army_agent = unique_german_army.create_agent(<br>                Point(x_home, y_home), <span class="hljs-string">&quot;F&quot;</span> + <span class="hljs-built_in">str</span>(i), <br>            )<br>            <span class="hljs-variable language_">self</span>.space.add_agents(france_army_agent)<br>            <span class="hljs-variable language_">self</span>.schedule.add(france_army_agent)  <br><br>        <br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">find_home</span>(<span class="hljs-params">self,region_agents,country</span>):<br>        <span class="hljs-variable language_">self</span>.country=country<br>        select_in_germanregions=[]<br>        select_in_franceregions=[]<br>        <span class="hljs-keyword">for</span> agent <span class="hljs-keyword">in</span> region_agents:<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;g&quot;</span> <span class="hljs-keyword">in</span> agent.unique_id:<br>                select_in_germanregions.append(agent)<br>            <span class="hljs-keyword">elif</span> <span class="hljs-string">&quot;f&quot;</span> <span class="hljs-keyword">in</span> agent.unique_id:<br>                select_in_franceregions.append(agent)<br>        <br>        <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.country==<span class="hljs-string">&quot;german&quot;</span>:<br>            this_region = <span class="hljs-variable language_">self</span>.random.randint(<br>                <span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(select_in_germanregions) - <span class="hljs-number">1</span><br>            )  <span class="hljs-comment"># Region where agent starts</span><br>            center_x, center_y = select_in_germanregions[<br>                this_region<br>            ].geometry.centroid.coords.xy<br>            this_bounds = select_in_germanregions[this_region].geometry.bounds<br>            spread_x = <span class="hljs-built_in">int</span>(<br>                this_bounds[<span class="hljs-number">2</span>] - this_bounds[<span class="hljs-number">0</span>]<br>            )  <span class="hljs-comment"># Heuristic for agent spread in region</span><br>            spread_y = <span class="hljs-built_in">int</span>(this_bounds[<span class="hljs-number">3</span>] - this_bounds[<span class="hljs-number">1</span>])<br>            this_x = center_x[<span class="hljs-number">0</span>] + <span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">0</span>, spread_x) - spread_x / <span class="hljs-number">2</span><br>            this_y = center_y[<span class="hljs-number">0</span>] + <span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">0</span>, spread_y) - spread_y / <span class="hljs-number">2</span><br>            <span class="hljs-keyword">return</span> this_x,this_y<br>        <br>        <span class="hljs-keyword">elif</span> <span class="hljs-variable language_">self</span>.country==<span class="hljs-string">&quot;france&quot;</span>:<br>            this_region = <span class="hljs-variable language_">self</span>.random.randint(<br>                <span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(select_in_franceregions) - <span class="hljs-number">1</span><br>            )  <span class="hljs-comment"># Region where agent starts</span><br>            center_x, center_y = select_in_franceregions[<br>                this_region<br>            ].geometry.centroid.coords.xy<br>            this_bounds = select_in_franceregions[this_region].geometry.bounds<br>            spread_x = <span class="hljs-built_in">int</span>(<br>                this_bounds[<span class="hljs-number">2</span>] - this_bounds[<span class="hljs-number">0</span>]<br>            )  <span class="hljs-comment"># Heuristic for agent spread in region</span><br>            spread_y = <span class="hljs-built_in">int</span>(this_bounds[<span class="hljs-number">3</span>] - this_bounds[<span class="hljs-number">1</span>])<br>            this_x = center_x[<span class="hljs-number">0</span>] + <span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">0</span>, spread_x) - spread_x / <span class="hljs-number">2</span><br>            this_y = center_y[<span class="hljs-number">0</span>] + <span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">0</span>, spread_y) - spread_y / <span class="hljs-number">2</span><br>            <span class="hljs-keyword">return</span> this_x,this_y<br>        <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">reset_counts</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-variable language_">self</span>.counts = &#123;<br>            <span class="hljs-string">&quot;in_war&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;set_a_place&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;prepared&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;dead&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;region in war&quot;</span>:<span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;not in war&quot;</span>:<span class="hljs-number">0</span><br>            &#125;<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step</span>(<span class="hljs-params">self</span>):<br><br>        <span class="hljs-variable language_">self</span>.reset_counts() <br>        <span class="hljs-variable language_">self</span>.schedule.step()<br>        <span class="hljs-variable language_">self</span>.datacollector.collect(<span class="hljs-variable language_">self</span>) <br></code></pre></td></tr></table></figure><h2 id="instantiate-the-model-and-run-it"><a class="markdownIt-Anchor" href="#instantiate-the-model-and-run-it"></a> Instantiate the model and run it.</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">model = warmodel()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>): <br>    model.step()<br></code></pre></td></tr></table></figure><h2 id="do-the-visuliztion"><a class="markdownIt-Anchor" href="#do-the-visuliztion"></a> do the visuliztion</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">model.datacollector.get_model_vars_dataframe()<br></code></pre></td></tr></table></figure><p><img src="/image/bg/war2datacollect.png" alt="" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">warmodel_draw</span>(<span class="hljs-params">agent</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Portrayal Method for canvas</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    portrayal = &#123;&#125;<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(agent, german_army): <br>        <span class="hljs-keyword">if</span> agent.wartype == <span class="hljs-string">&quot;in_war&quot;</span>:<br>            portrayal[<span class="hljs-string">&quot;color&quot;</span>] = <span class="hljs-string">&quot;red&quot;</span><br>        <span class="hljs-keyword">elif</span> agent.wartype == <span class="hljs-string">&quot;set_a_place&quot;</span>:<br>            portrayal[<span class="hljs-string">&quot;color&quot;</span>] = <span class="hljs-string">&quot;yellow&quot;</span><br>        <span class="hljs-keyword">elif</span> agent.wartype == <span class="hljs-string">&quot;prepared&quot;</span>:<br>            portrayal[<span class="hljs-string">&quot;color&quot;</span>] = <span class="hljs-string">&quot;Blue&quot;</span><br>        <span class="hljs-keyword">else</span>:<br>            portrayal[<span class="hljs-string">&quot;color&quot;</span>] = <span class="hljs-string">&quot;grey&quot;</span><br>            <br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(agent, france_army): <br>        <span class="hljs-keyword">if</span> agent.wartype == <span class="hljs-string">&quot;in_war&quot;</span>:<br>            portrayal[<span class="hljs-string">&quot;color&quot;</span>] = <span class="hljs-string">&quot;pink&quot;</span><br>        <span class="hljs-keyword">elif</span> agent.wartype == <span class="hljs-string">&quot;prepared&quot;</span>:<br>            portrayal[<span class="hljs-string">&quot;color&quot;</span>] = <span class="hljs-string">&quot;green&quot;</span><br>        <span class="hljs-keyword">else</span>: <br>            portrayal[<span class="hljs-string">&quot;color&quot;</span>] = <span class="hljs-string">&quot;black&quot;</span><br>            <br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(agent, regionAgent):<br>        <span class="hljs-keyword">if</span> agent.wartype == <span class="hljs-string">&quot;region in war&quot;</span>:<br>            portrayal[<span class="hljs-string">&quot;color&quot;</span>] = <span class="hljs-string">&quot;Red&quot;</span><br>        <span class="hljs-keyword">else</span>: <br>            portrayal[<span class="hljs-string">&quot;color&quot;</span>] = <span class="hljs-string">&quot;green&quot;</span><br>    <br>    <span class="hljs-keyword">return</span> portrayal<br><br><br>model_params = &#123;<br>    <span class="hljs-string">&quot;german_army_size&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;SliderInt&quot;</span>,<br>        <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-number">60</span>,<br>        <span class="hljs-string">&quot;label&quot;</span>: <span class="hljs-string">&quot;german_army_size&quot;</span>,<br>        <span class="hljs-string">&quot;min&quot;</span>: <span class="hljs-number">30</span>,<br>        <span class="hljs-string">&quot;max&quot;</span>: <span class="hljs-number">100</span>, <br>        <span class="hljs-string">&quot;step&quot;</span>: <span class="hljs-number">1</span>,<br>    &#125;,<br>     <span class="hljs-string">&quot;france_army_size&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;SliderInt&quot;</span>,<br>        <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-number">60</span>,<br>        <span class="hljs-string">&quot;label&quot;</span>: <span class="hljs-string">&quot;france_army_size&quot;</span>,<br>        <span class="hljs-string">&quot;min&quot;</span>: <span class="hljs-number">30</span>,<br>        <span class="hljs-string">&quot;max&quot;</span>: <span class="hljs-number">100</span>, <br>        <span class="hljs-string">&quot;step&quot;</span>: <span class="hljs-number">1</span>,<br>     &#125;&#125;<br><br><br>page = mgv.GeoJupyterViz(<br>    warmodel,<br>    model_params,<br>    measures= [[<span class="hljs-string">&quot;in_war&quot;</span>, <span class="hljs-string">&quot;prepared&quot;</span>, <span class="hljs-string">&quot;set_a_place&quot;</span>, <span class="hljs-string">&quot;dead&quot;</span>], [<span class="hljs-string">&quot;region in war&quot;</span>, <span class="hljs-string">&quot;not in war&quot;</span>]],<br>    name=<span class="hljs-string">&quot;warmodel_german-france&quot;</span>,   <br>    agent_portrayal=warmodel_draw,  <br>    zoom=<span class="hljs-number">10</span>,<br>    scroll_wheel_zoom=<span class="hljs-literal">False</span><br>)<br><span class="hljs-comment"># This is required to render the visualization in the Jupyter notebook</span><br>page<br></code></pre></td></tr></table></figure><p><img src="/image/bg/war2anime.png" alt="" /></p>]]></content>
    
    
    <categories>
      
      <category>study share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ABM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>how to write a abm report?</title>
    <link href="/2024/11/16/ABM_report/"/>
    <url>/2024/11/16/ABM_report/</url>
    
    <content type="html"><![CDATA[<h1 id="how-to-write-a-abmagent-based-modeling-report-如何撰写abm的报告"><a class="markdownIt-Anchor" href="#how-to-write-a-abmagent-based-modeling-report-如何撰写abm的报告"></a> how to write a ABM(agent based modeling) report? （如何撰写ABM的报告？）</h1><p>first let’s take a look at the parts of ABM report. Here, I’d like to share the OOD framwork to you:<br /><a href="https://www.jasss.org/23/2/7.html">https://www.jasss.org/23/2/7.html</a> Grimm, V. et al. (2020).</p><p><img src="/image/bg/abmreport_OOD.png" alt="" /><br />We shold know that there is no must for every abm creator to follow this framework. And sometimes it’s too complex for publishing. However, it’s a great way for us to organize our method part in our wirting.</p><ul><li>1.purpose</li><li>2.entities, state variables, and scales</li><li>3.Process overview and scheduling</li><li>4.design concept</li><li>5.initialization</li><li>6.visualization</li><li>7.input data</li><li>8.model outputs/simulation experiments</li><li>9.submodels(several specific fuction)</li></ul><h2 id="1purpose"><a class="markdownIt-Anchor" href="#1purpose"></a> 1.purpose</h2><p>what we should do in this part?</p><p>the aim of modeling.<br />a simple overview of our abm model</p><h2 id="2entities-state-variables-and-scales"><a class="markdownIt-Anchor" href="#2entities-state-variables-and-scales"></a> 2.entities, state variables, and scales</h2><ul><li>a simple introduction of our entities and what entities include, the space scale, the time scale.</li><li>then, describe all the agents: agents’ parametres: agents’ attributes(threshold, uid, find_range, activation weight) / variables: location(geometry), state, observe_num.</li><li>space entities</li><li>schedule</li><li>data collection and register</li></ul><h2 id="3process-overview-and-scheduling"><a class="markdownIt-Anchor" href="#3process-overview-and-scheduling"></a> 3.Process overview and scheduling</h2><p>just interpret how the schedule can be used.</p><h2 id="4design-concept"><a class="markdownIt-Anchor" href="#4design-concept"></a> 4.design concept</h2><ul><li>the objectives of agents（agent的目标是什么）e.g.go out of the maze.</li><li>sensing of agents (agent的感知) describe physical sensing and social network sensing.</li><li>interaction: the interaction among people, the interaction between person agent and physical environment.</li><li>Heterogeneity (异质性): describe the behavior difference in agent decision-making</li><li>Stochasticity: the random initialization and random behavior of agents.</li><li>observation: when data is collected?</li></ul>]]></content>
    
    
    <categories>
      
      <category>study share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ABM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mesa-geo introduction(1)</title>
    <link href="/2024/11/12/war-abm-mesageo/"/>
    <url>/2024/11/12/war-abm-mesageo/</url>
    
    <content type="html"><![CDATA[<h1 id="war-spread-model内战传播模型"><a class="markdownIt-Anchor" href="#war-spread-model内战传播模型"></a> war spread model(内战传播模型)：</h1><p>A simplified ABM (Agent-Based Model) describing spatial dependency and spatial heterogeneity:</p><ul><li>Spatial dependency: This refers to the phenomenon that an area is more likely to experience civil war if its surrounding areas are experiencing civil war.</li><li>Spatial heterogeneity: Based on existing research, we define spatial heterogeneity as the proximity to the capital. Areas closer to the capital are more prone to war, as the upper echelons of the country often initiate wars and the central government is typically located in the capital.</li></ul><p>Here, to let you get the correct data type conveniently,this blog still use the official geo-data. You can try to get the TorontoNeighbourhoods.geojson from the official website, and have a try:<br /><a href="https://github.com/projectmesa/mesa-examples/blob/main/gis/geo_sir/data/TorontoNeighbourhoods.geojson">https://github.com/projectmesa/mesa-examples/blob/main/gis/geo_sir/data/TorontoNeighbourhoods.geojson</a></p><h2 id="import-package"><a class="markdownIt-Anchor" href="#import-package"></a> import package</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> mesa <br><span class="hljs-keyword">import</span> mesa_geo <span class="hljs-keyword">as</span> mg<br><span class="hljs-keyword">import</span> mesa_geo.visualization <span class="hljs-keyword">as</span> mgv<br></code></pre></td></tr></table></figure><h2 id="create-regionagent"><a class="markdownIt-Anchor" href="#create-regionagent"></a> create regionAgent</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">regionAgent</span>(mg.GeoAgent):<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, unique_id, model, geometry, crs,agent_type =<span class="hljs-string">&quot;no_war&quot;</span>,war_infection_risk=<span class="hljs-number">0.1</span> ,war_recovery_rate=<span class="hljs-number">0.2</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__(unique_id, model, geometry, crs)<br>        <span class="hljs-variable language_">self</span>.atype= agent_type<br>        <span class="hljs-variable language_">self</span>.war_infection_risk=war_infection_risk<br>        <span class="hljs-variable language_">self</span>.war_revovery_rate=war_recovery_rate<br>        <span class="hljs-variable language_">self</span>.in_war_step=<span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;region&quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-variable language_">self</span>.unique_id)<br>    <br>    <span class="hljs-comment">#If an agent that is not currently engaged in war is within a fixed distance of an agent that is engaged in war</span><br>    <span class="hljs-comment"># there is also a possibility that war may directly occur between them (depending on the threshold set).</span><br>    <span class="hljs-comment"># Agents that are closer to the capital are more likely to experience war (a weight can be set here)</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">war_spread</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.atype == <span class="hljs-string">&quot;no_war&quot;</span>:<br>            neighbors= <span class="hljs-variable language_">self</span>.model.space.get_neighbors_within_distance(<br>                <span class="hljs-variable language_">self</span>,<span class="hljs-variable language_">self</span>.model.exposure_distance<br>            )<br><br>            <span class="hljs-keyword">for</span> neighnor <span class="hljs-keyword">in</span> neighbors:<br>            <span class="hljs-comment">#useLdistance(self, agent_a, agent_b)或者agent_a.geometry.distance(agent_b.geometry)</span><br>                A_C_distance=<span class="hljs-variable language_">self</span>.model.space.distance(agent_a=<span class="hljs-variable language_">self</span>, agent_b=<span class="hljs-variable language_">self</span>.model.capitalAgent)<br>                <span class="hljs-keyword">if</span> (neighnor.atype == <span class="hljs-string">&quot;in_war&quot;</span> <br>                    <span class="hljs-keyword">and</span> A_C_distance*<span class="hljs-number">0.001</span>+<span class="hljs-variable language_">self</span>.random.random() &lt; <span class="hljs-variable language_">self</span>.model.threshold_war_infection<br>                    ):<br>                    <span class="hljs-variable language_">self</span>.atype = <span class="hljs-string">&quot;in_war&quot;</span><br>                    <span class="hljs-variable language_">self</span>.in_war_step=<span class="hljs-number">0</span><br>                    <span class="hljs-keyword">break</span><br>        <br>        <span class="hljs-comment">#set step for in-war districts</span><br>        <span class="hljs-keyword">elif</span> <span class="hljs-variable language_">self</span>.atype==<span class="hljs-string">&quot;in_war&quot;</span>:<br>            <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.in_war_step&lt;<span class="hljs-number">3</span>:<br>                <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.random.random() &lt; <span class="hljs-variable language_">self</span>.war_revovery_rate:<br>                    <span class="hljs-variable language_">self</span>.atype = <span class="hljs-string">&quot;no_war&quot;</span><br>                    <span class="hljs-variable language_">self</span>.in_war_step=<span class="hljs-variable language_">self</span>.in_war_step+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-variable language_">self</span>.in_war_step=<span class="hljs-number">0</span><br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-variable language_">self</span>.war_spread()<br>        <span class="hljs-variable language_">self</span>.model.counts[<span class="hljs-variable language_">self</span>.atype] += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h2 id="model-part-combine-agents-time-and-space"><a class="markdownIt-Anchor" href="#model-part-combine-agents-time-and-space"></a> model part: combine agents, time and space</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_in_war_count</span>(<span class="hljs-params">model</span>):<br>    <span class="hljs-keyword">return</span> model.counts[<span class="hljs-string">&quot;in_war&quot;</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_no_war_count</span>(<span class="hljs-params">model</span>):<br>    <span class="hljs-keyword">return</span> model.counts[<span class="hljs-string">&quot;no_war&quot;</span>]<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">war_model</span>(mesa.Model):<br>    <span class="hljs-comment">#here I just use the data in official file</span><br>    geojson_regions = <span class="hljs-string">&quot;D:\...\TorontoNeighbourhoods.geojson&quot;</span><br>    unique_id = <span class="hljs-string">&quot;HOODNUM&quot;</span><br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,int_war_rate=<span class="hljs-number">0.2</span>,war_revovery_rate=<span class="hljs-number">0.6</span>,threshold_war_infection=<span class="hljs-number">1.5</span>,exposure_distance=<span class="hljs-number">1000</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br>        <br>        <span class="hljs-variable language_">self</span>.int_war_rate=int_war_rate<br>        <span class="hljs-variable language_">self</span>.war_recovery_rate=war_revovery_rate<br>        <span class="hljs-variable language_">self</span>.threshold_war_infection=threshold_war_infection<br>        <span class="hljs-variable language_">self</span>.exposure_distance=exposure_distance<br><br><br>        <span class="hljs-variable language_">self</span>.schedule=mesa.time.RandomActivation(<span class="hljs-variable language_">self</span>)<br>        <span class="hljs-variable language_">self</span>.space=mg.GeoSpace(warn_crs_conversion=<span class="hljs-literal">False</span>)<br>        <span class="hljs-comment">#capital id</span><br>        <span class="hljs-variable language_">self</span>.capital_id=<span class="hljs-number">105</span><br><br><br>        <span class="hljs-variable language_">self</span>.counts=<span class="hljs-literal">None</span><br>        <span class="hljs-variable language_">self</span>.reset_counts()<br><br>        <span class="hljs-variable language_">self</span>.datacollector = mesa.DataCollector(<br>            &#123;<br>                <span class="hljs-string">&quot;no_war&quot;</span>: get_no_war_count,<br>                <span class="hljs-string">&quot;in_war&quot;</span>: get_in_war_count<br>            &#125;<br>        ) <br><br><br>        ac=mg.AgentCreator(<br>            regionAgent,<br>            model=<span class="hljs-variable language_">self</span>)  <br>        region_agents = ac.from_file(<span class="hljs-variable language_">self</span>.geojson_regions,unique_id=<span class="hljs-variable language_">self</span>.unique_id)<br>        <br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(region_agents)):<br>            <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.random.random() &lt; <span class="hljs-variable language_">self</span>.int_war_rate:<br>             <span class="hljs-comment">#if self.random.random() &lt; 0.2:</span><br>                region_agents[j].atype=<span class="hljs-string">&quot;in_war&quot;</span><br><br>        <span class="hljs-variable language_">self</span>.space.add_agents(region_agents)<br><br>        <span class="hljs-comment"># find capital agent id</span><br>        <span class="hljs-variable language_">self</span>.capitalAgent = <span class="hljs-built_in">next</span>((agent <span class="hljs-keyword">for</span> agent <span class="hljs-keyword">in</span> region_agents <span class="hljs-keyword">if</span> agent.unique_id == <span class="hljs-variable language_">self</span>.capital_id), <span class="hljs-literal">None</span>)<br><br><br>        <span class="hljs-keyword">for</span> agent <span class="hljs-keyword">in</span> region_agents:<br>            <span class="hljs-variable language_">self</span>.schedule.add(agent)<br><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">reset_counts</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-variable language_">self</span>.counts = &#123;<br>            <span class="hljs-string">&quot;in_war&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;no_war&quot;</span>:<span class="hljs-number">0</span><br>            &#125;<br>        <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-variable language_">self</span>.reset_counts()<br>        <span class="hljs-variable language_">self</span>.schedule.step()<br>        <span class="hljs-variable language_">self</span>.datacollector.collect(<span class="hljs-variable language_">self</span>) <br></code></pre></td></tr></table></figure><h2 id="run-war-spread-model"><a class="markdownIt-Anchor" href="#run-war-spread-model"></a> run war spread model</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">model = war_model()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>): <br>    model.step()<br></code></pre></td></tr></table></figure><h2 id="model-visulization"><a class="markdownIt-Anchor" href="#model-visulization"></a> model visulization</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">model.datacollector.get_model_vars_dataframe()<br></code></pre></td></tr></table></figure><p><img src="/image/bg/war1datacollect.png" alt="" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">war_model_draw</span>(<span class="hljs-params">agent</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Portrayal Method for canvas</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    portrayal = &#123;&#125;       <br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(agent, regionAgent):<br>        <span class="hljs-keyword">if</span> agent.atype == <span class="hljs-string">&quot;in_war&quot;</span>:<br>            portrayal[<span class="hljs-string">&quot;color&quot;</span>] = <span class="hljs-string">&quot;Red&quot;</span><br>        <span class="hljs-keyword">else</span>: <br>            portrayal[<span class="hljs-string">&quot;color&quot;</span>] = <span class="hljs-string">&quot;green&quot;</span><br>    <br>    <span class="hljs-keyword">return</span> portrayal<br><br><br>model_params = &#123;<br>    <span class="hljs-string">&quot;int_war_rate&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;SliderFloat&quot;</span>,<br>        <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-number">0.2</span>,<br>        <span class="hljs-string">&quot;label&quot;</span>: <span class="hljs-string">&quot;Population Size&quot;</span>,<br>        <span class="hljs-string">&quot;min&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;max&quot;</span>: <span class="hljs-number">0.6</span>, <br>        <span class="hljs-string">&quot;step&quot;</span>: <span class="hljs-number">0.05</span>,<br>    &#125;,<br>    <span class="hljs-string">&quot;threshold_war_infection&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;SliderFloat&quot;</span>,<br>        <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-number">1.5</span>,<br>        <span class="hljs-string">&quot;label&quot;</span>: <span class="hljs-string">&quot;Population Size&quot;</span>,<br>        <span class="hljs-string">&quot;min&quot;</span>: <span class="hljs-number">1.2</span>,<br>        <span class="hljs-string">&quot;max&quot;</span>: <span class="hljs-number">2</span>, <br>        <span class="hljs-string">&quot;step&quot;</span>: <span class="hljs-number">0.1</span>,<br>    &#125;,<br>    <span class="hljs-string">&quot;exposure_distance&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;SliderInt&quot;</span>,<br>        <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-number">1000</span>,<br>        <span class="hljs-string">&quot;label&quot;</span>: <span class="hljs-string">&quot;Population Size&quot;</span>,<br>        <span class="hljs-string">&quot;min&quot;</span>: <span class="hljs-number">500</span>,<br>        <span class="hljs-string">&quot;max&quot;</span>: <span class="hljs-number">2000</span>, <br>        <span class="hljs-string">&quot;step&quot;</span>: <span class="hljs-number">100</span>,<br>    &#125;,<br>    <span class="hljs-string">&quot;war_revovery_rate&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;SliderFloat&quot;</span>,<br>      <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-number">0.6</span>,<br>        <span class="hljs-string">&quot;label&quot;</span>: <span class="hljs-string">&quot;Maximum Number of Steps to Recover&quot;</span>,<br>        <span class="hljs-string">&quot;min&quot;</span>: <span class="hljs-number">0.1</span>,<br>        <span class="hljs-string">&quot;max&quot;</span>: <span class="hljs-number">1</span>, <br>        <span class="hljs-string">&quot;step&quot;</span>: <span class="hljs-number">0.1</span>,   <br>     &#125;&#125;<br><br>page = mgv.GeoJupyterViz(<br>    war_model,<br>    model_params,<br>    measures= [ [<span class="hljs-string">&quot;in_war&quot;</span>, <span class="hljs-string">&quot;no_war&quot;</span>]],<br>    name=<span class="hljs-string">&quot;war spread&quot;</span>,   <br>    agent_portrayal=war_model_draw,  <br>    zoom=<span class="hljs-number">12</span>,<br>    scroll_wheel_zoom=<span class="hljs-literal">False</span><br>)<br><br></code></pre></td></tr></table></figure><h1 id="visualization-in-the-jupyter-notebook"><a class="markdownIt-Anchor" href="#visualization-in-the-jupyter-notebook"></a> visualization in the Jupyter notebook</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">page<br></code></pre></td></tr></table></figure><p><img src="/image/bg/war1anim.png" alt="" /></p><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> reference</h2><p>Chen Chong, Hu Jingtian. Spatial Dependence and the Prediction of Armed Conflicts [J]. International Political Science, 2022, 7(2): 86-123.<br /><a href="https://cc458.github.io/files/chen_hu_2022qjip.pdf">https://cc458.github.io/files/chen_hu_2022qjip.pdf</a></p>]]></content>
    
    
    <categories>
      
      <category>study share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ABM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mesa-geo introduction</title>
    <link href="/2024/11/12/mesa-geo-introduction/"/>
    <url>/2024/11/12/mesa-geo-introduction/</url>
    
    <content type="html"><![CDATA[<h1 id="this-is-a-study-share-or-tutorial-for-mesa-geo-study-beginner"><a class="markdownIt-Anchor" href="#this-is-a-study-share-or-tutorial-for-mesa-geo-study-beginner"></a> this is a study share or tutorial for mesa-geo study beginner</h1><h2 id="an-interesting-metaphor"><a class="markdownIt-Anchor" href="#an-interesting-metaphor"></a> an interesting metaphor:</h2><p><img src="/image/bg/blog1.png" alt="" /><br />（You’re Under Arrest!——anime） Natsumi is a female police officer with short hair, while Miyuki is a female police officer who is driving. They are traffic police officers and spend most of their time executing tasks together, with a smaller portion of time spent separately.</p><p>When executing tasks separately, Miyuki’s greetings to Natsumi:</p><ul><li>Moshi moshi!</li><li>Natsumi, which district of Tokyo are you in now? Are you still on duty there? How far is it from where you are to the Motodome Police Station? What are you planning to do after your shift? Are you heading back to Motodome?</li></ul><p>At this moment, Tokyo is the city where Natsumi and Miyuki are located, but they are in different areas, which can be regarded as neighborhood agents or region agents.</p><p>When we consider Natsumi as a person agent, her name “Natsumi” is actually a unique ID.</p><p>“What are you planning to do after your shift?” can actually be seen as what the next step is, or simply “step”.</p><p>The interaction between Natsumi, Miyuki, and the city constitutes the model among agents. We need to place them and the city into both spatial and temporal sequences.</p><h2 id="1introduction-of-mesa-geo-package"><a class="markdownIt-Anchor" href="#1introduction-of-mesa-geo-package"></a> 1.introduction of mesa-geo package</h2><p>mesa-geo is a <strong>python package</strong> which is a extension of mesa package. mesa-geo can help us to conduct Agent based modeling.<br /><a href="https://github.com/projectmesa/mesa-geo">https://github.com/projectmesa/mesa-geo</a></p><ul><li>with mesa-geo, we can build build a geosapce which can <strong>contain</strong> or support <strong>gis Agents</strong></li><li>Compared to traditional Agents, geoAgents have more <strong>geometry attributes</strong>: shapely, <strong>CRS</strong> coordinate system…</li></ul><p>the geo_data mesa-geo use:</p><ul><li>we can directly use shapely package to create a geometry object <strong>on our own</strong>.</li><li>we can also import existing geometric objects -&gt; vector data: shp, geojson, geodataframe.</li></ul><p>for example:</p><ul><li>Use the point function from the shapely package to generate corresponding coordinate points for the person agent.</li><li>Directly import the regional data of any place.</li></ul><h2 id="2the-existing-geometric-data-which-can-be-used-by-mesa-geo"><a class="markdownIt-Anchor" href="#2the-existing-geometric-data-which-can-be-used-by-mesa-geo"></a> 2.the existing geometric data which can be used by mesa-geo</h2><h3 id="raster-data"><a class="markdownIt-Anchor" href="#raster-data"></a> raster data</h3><ul><li>Divided into a grid and segmented into individual pixels, which ensures a uniform format and facilitates uniform operations.</li><li>Detailed representation of various features, resulting in large data volumes.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> rasterio  <br><span class="hljs-comment">#open the rasterio  </span><br>ds=rasterio.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;\...\...tif&#x27;</span>) <br></code></pre></td></tr></table></figure><h3 id="vector-data"><a class="markdownIt-Anchor" href="#vector-data"></a> vector data</h3><ul><li>Only stores geographic objects such as points, point lists, and related features, resulting in smaller data volumes.</li><li>Accurately represents point-line-plane elements.</li><li>Facilitates modification and editing.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> geopandas <span class="hljs-keyword">as</span> gpd  <br>gdf = gpd.read_file(<span class="hljs-string">&#x27;\...\...\...shp&#x27;</span>) <br><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-comment"># read the geojson data</span><br>file_path = <span class="hljs-string">&#x27;\...geojson&#x27;</span><br>file_path = <span class="hljs-string">&quot;\...\....geojson&quot;</span><br>gdf_0 = gpd.read_file(file_path)<br><br><span class="hljs-comment"># draw the map</span><br>fig, ax = plt.subplots(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, figsize=(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>))<br>gdf_0.plot(ax=ax, alpha=<span class="hljs-number">0.5</span>, edgecolor=<span class="hljs-string">&#x27;k&#x27;</span>)<br>ax.set_title(<span class="hljs-string">&#x27;regions&#x27;</span>)<br>ax.set_xlabel(<span class="hljs-string">&#x27;Longitude&#x27;</span>)<br>ax.set_ylabel(<span class="hljs-string">&#x27;Latitude&#x27;</span>)<br><br><span class="hljs-comment"># show the map</span><br>plt.show()<br></code></pre></td></tr></table></figure><h2 id="3what-is-geoagenthow-to-use-the-geo_data"><a class="markdownIt-Anchor" href="#3what-is-geoagenthow-to-use-the-geo_data"></a> 3.what is GeoAgent?/how to use the geo_data?</h2><p>what can be done with these geo_data in mesa-geo?</p><p>put the GeoAgents <strong>into the geospace</strong>! this geo_data are the location where agents are.</p><p>however, before we put the GeoAgent into the geospace, let’s figure it out what is GeoAgent.</p><h3 id="geoagent"><a class="markdownIt-Anchor" href="#geoagent"></a> GeoAgent:</h3><p>GeoAgent has different kinds of attributes: unique_id, model where the agents are put, geometry, crs</p><p>GeoAgent <strong>can be</strong> buildings, people and others all you hope they have locations in your simulation process.</p><p>GeoAgent can move or change state which are set as rules function</p><p>GeoAgent will have a string of actions as time goes, so agents have step()function</p><h3 id="set-geoagent-class-set-attributesproperties-and-rules-of-agents-action"><a class="markdownIt-Anchor" href="#set-geoagent-class-set-attributesproperties-and-rules-of-agents-action"></a> set GeoAgent Class: set attributes(properties) and rules of agents action</h3><p>what do attributes, rules fuction and step fuction look like?</p><ul><li>attributes and basic variables</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">regionAgent</span>(mg.GeoAgent):<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, unique_id, model, geometry, crs,agent_type =<span class="hljs-string">&quot;no_war&quot;</span>,war_infection_risk=<span class="hljs-number">0.1</span> ,war_recovery_rate=<span class="hljs-number">0.2</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__(unique_id, model, geometry, crs)<br>        <span class="hljs-variable language_">self</span>.atype= agent_type<br>        <span class="hljs-variable language_">self</span>.war_infection_risk=war_infection_risk<br>        <span class="hljs-variable language_">self</span>.war_revovery_rate=war_recovery_rate<br>        <span class="hljs-variable language_">self</span>.in_war_step=<span class="hljs-number">0</span><br>    <span class="hljs-comment">#(p.s.this is from my war spread abm model created by myself, and I will introduce it clearly later)</span><br></code></pre></td></tr></table></figure><ul><li>move function</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">move_point</span>(<span class="hljs-params">self, dx, dy</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        Move a point by creating a new one</span><br><span class="hljs-string">        :param dx:  Distance to move in x-axis</span><br><span class="hljs-string">        :param dy:  Distance to move in y-axis</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-keyword">return</span> Point(<span class="hljs-variable language_">self</span>.geometry.x + dx, <span class="hljs-variable language_">self</span>.geometry.y + dy)<br><span class="hljs-comment">#this is from official tutorial example</span><br><br></code></pre></td></tr></table></figure><ul><li>state change fuction</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">is_unhappy</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.is_red:<br>            <span class="hljs-keyword">return</span> (<br>                <span class="hljs-variable language_">self</span>.model.space.get_region_by_id(<span class="hljs-variable language_">self</span>.region_id).red_pct<br>                &lt; <span class="hljs-variable language_">self</span>.SIMILARITY_THRESHOLD<br>            )<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> (<br>                <span class="hljs-number">1</span> - <span class="hljs-variable language_">self</span>.model.space.get_region_by_id(<span class="hljs-variable language_">self</span>.region_id).red_pct<br>            ) &lt; <span class="hljs-variable language_">self</span>.SIMILARITY_THRESHOLD<br><span class="hljs-comment">#this is from official tutorial example</span><br></code></pre></td></tr></table></figure><ul><li>step fuction: which can contains the move or state change rules directly or fuction indirectly.</li><li>which can also contains the time register(observer) function.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">step</span>(<span class="hljs-params">self</span>):<br>    <span class="hljs-variable language_">self</span>.war_spread()<br>    <span class="hljs-variable language_">self</span>.model.counts[<span class="hljs-variable language_">self</span>.atype] += <span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><h3 id="allocate-a-locationgeographic-object-to-every-geoagent"><a class="markdownIt-Anchor" href="#allocate-a-locationgeographic-object-to-every-geoagent"></a> Allocate a location(geographic object) to every GeoAgent:</h3><p>what we should do next: is to instantiate the GeoAgent in our model</p><p>there are several ways:</p><ul><li>using the geo_file we methioned</li><li>using the geometry</li></ul><h4 id="using-geo_file"><a class="markdownIt-Anchor" href="#using-geo_file"></a> using geo_file</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">ac=mg.AgentCreator(XXAgent, model=<span class="hljs-variable language_">self</span>)<br><br>instantiate_object = ac.from_file(<br>    <span class="hljs-variable language_">self</span>.XXdate,<br>    unique_id=<span class="hljs-string">&quot;name&quot;</span>,<br>    set_attributes=<span class="hljs-literal">True</span><br>)<br></code></pre></td></tr></table></figure><h4 id="using-the-geometry"><a class="markdownIt-Anchor" href="#using-the-geometry"></a> using the geometry</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">instantiate_object = mg.AgentCreator(<br>XXAgent,<br>model=<span class="hljs-variable language_">self</span>,<br>crs=<span class="hljs-variable language_">self</span>.space.crs,<br>agent_kwargs=&#123;&#125;<br>)<br><br>point<br>XXobject= unique_shelter.create_agent(<br>    point, <span class="hljs-string">&quot;xx&quot;</span> + <span class="hljs-built_in">str</span>(j),<br>)<br><br></code></pre></td></tr></table></figure><h4 id="put-the-geoagent-into-space"><a class="markdownIt-Anchor" href="#put-the-geoagent-into-space"></a> put the GeoAgent into space</h4><p>this is very easy, just put every instantiate_object into the space. it’s OK!</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-variable language_">self</span>.space.add_agents(instantiate_object)<br><br><br></code></pre></td></tr></table></figure><h2 id="4the-time-and-space-in-mesa-geo"><a class="markdownIt-Anchor" href="#4the-time-and-space-in-mesa-geo"></a> 4.the time and space in mesa-geo</h2><h3 id="the-time-in-mesa-geo"><a class="markdownIt-Anchor" href="#the-time-in-mesa-geo"></a> the time in mesa-geo</h3><p>the time in mesa-geo is the same as mesa package</p><p>it is relevent to mesa.time this module, let’s go on!</p><ul><li>Core idea, simplified: First, line up the little ones, then let them slide down the slide one by one.</li><li>For each agent, set up a step() function, add the agent to the time series of the schedule, and finally, activate them all uniformly through schedule.step().</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">import</span> mesa<br><span class="hljs-keyword">import</span> mesa_geo <span class="hljs-keyword">as</span> mg<br><span class="hljs-comment">#??mesa.time #you can check it yourself</span><br><br></code></pre></td></tr></table></figure><p>the given example without considering spatial arrangement, but focusing only on the changes in steps:</p><p>I have set up a scenario where everyone initially stands in a single line. Each person will take one step forward in their next move. Where will they be after taking 10 steps?</p><p>here are some methods of sheldule of mesa:</p><ul><li>mesa.time.RandomActivation(self)</li><li>mesa.time.SimultaneousActivation(self)</li><li>mesa.time.BaseScheduler(self)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">import</span> mesa  <br>  <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span>(mesa.Agent):  <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, unique_id: <span class="hljs-built_in">int</span>, model: <span class="hljs-string">&#x27;TestModel&#x27;</span></span>) -&gt; <span class="hljs-literal">None</span>:  <br>        <span class="hljs-built_in">super</span>().__init__(unique_id, model)  <br>        <span class="hljs-variable language_">self</span>.yuyu = <span class="hljs-variable language_">self</span>.random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>) <span class="hljs-comment">#为每一个agent随机分配一个位置</span><br>  <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step</span>(<span class="hljs-params">self</span>):  <br>        <span class="hljs-variable language_">self</span>.yuyu = <span class="hljs-variable language_">self</span>.yuyu+<span class="hljs-number">1</span>  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-variable language_">self</span>.unique_id,<span class="hljs-variable language_">self</span>.yuyu)  <br><br><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TestModel</span>(mesa.Model):  <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):  <br>        <span class="hljs-built_in">super</span>().__init__()  <br>        <span class="hljs-comment">#you can try different kinds of methods: just try it!</span><br>        <span class="hljs-variable language_">self</span>.schedule = mesa.time.RandomActivation(<span class="hljs-variable language_">self</span>)<br>        <span class="hljs-comment">#self.schedule = mesa.time.SimultaneousActivation(self)</span><br>        <span class="hljs-comment">#self.schedule = mesa.time.BaseScheduler(self)</span><br>        <span class="hljs-variable language_">self</span>.create_agents()  <br>  <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">create_agents</span>(<span class="hljs-params">self</span>):  <br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):  <br>            personagent = Person(unique_id=i, model=<span class="hljs-variable language_">self</span>)  <br>            <span class="hljs-variable language_">self</span>.schedule.add(personagent)  <br>  <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step</span>(<span class="hljs-params">self</span>):  <br>        <span class="hljs-variable language_">self</span>.schedule.step()  <br>   <br>model = TestModel()  <br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>): <span class="hljs-comment">#here we repeat 10 times</span><br>    model.step()<br><br></code></pre></td></tr></table></figure><h3 id="the-space-in-mesa-geo"><a class="markdownIt-Anchor" href="#the-space-in-mesa-geo"></a> the space in mesa-geo</h3><p>we will use mg.geospace，and this module is created based on geobase</p><p>geospace: initiate the crs(coordinate system) and layers and so on</p><p>geospace fuction:</p><p>basic function：</p><ul><li>to_crs: you can change the crs of space, e.g. change the degree crs into m crs</li><li>agents(self)：Return a list of all agents in the Geospace(agents layer)</li><li>layers(self): Return a list of all layers in the Geospace.</li><li>total_bounds(self): Return the bounds of the GeoSpace in [min_x, min_y, max_x, max_y] format.</li><li><em>geo_interface</em>_(self)</li></ul><p>add or remove agents function：<br />when we want to move the agents, we can use this kind of function</p><ul><li>add_agents(self, agents)：add</li><li>remove_agent(self, agent):remove out</li></ul><p>search for specific agent：<br />when we design the state change fuction or move function, we can use them</p><ul><li>get_relation(self, agent, relation):</li><li>get_intersecting_agents</li><li>get_neighbors_within_distance</li></ul><p>describe the agent distance and relationships：</p><ul><li>agents_at(self, pos)</li><li>distance(self, agent_a, agent_b)</li><li>get_neighbors(self, agent)</li><li>get_agents_as_GeoDataFrame</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#you can check this module yourself, believe in yourself!</span><br><span class="hljs-keyword">import</span> mesa_geo <span class="hljs-keyword">as</span> mg<br><span class="hljs-comment">#??mg.geospace</span><br><br></code></pre></td></tr></table></figure><h2 id="5model-the-part-bridge-agents-time-and-space"><a class="markdownIt-Anchor" href="#5model-the-part-bridge-agents-time-and-space"></a> 5.Model: the part bridge agents, time and space</h2><p>what you should do is: instantiate all of the GeoAgents and put them into step(time) scheldule and geospace.</p><p>and them, run your instantiated model object, you can wait the agents ‘play with’ each other, it’s so fantastic!</p><h2 id="6some-tricks"><a class="markdownIt-Anchor" href="#6some-tricks"></a> 6.some tricks:</h2><h3 id="when-we-need-to-set-up-transitions-between-different-states-for-an-agent"><a class="markdownIt-Anchor" href="#when-we-need-to-set-up-transitions-between-different-states-for-an-agent"></a> When we need to set up transitions between different states for an agent:</h3><ul><li>Using if-elif-else syntax can achieve this.</li><li>Setting thresholds and recorders for some states, allowing transitions when certain levels are reached.</li></ul><h3 id="i-want-to-express-in-code-how-to-randomly-generate-two-types-of-objects"><a class="markdownIt-Anchor" href="#i-want-to-express-in-code-how-to-randomly-generate-two-types-of-objects"></a> I want to express in code how to randomly generate two types of objects:</h3><ul><li>Set a threshold value at 0.5 (or other values).</li><li>Assign a random number to a specific object and check if this random number is greater than or less than the threshold of 0.5 to naturally categorize it.</li><li>For example: is_red = random.random() &lt; self.red_percentage.</li></ul><h3 id="to-implement-a-persons-movement-within-a-circular-area-centered-on-themselves-with-a-radius-of-r"><a class="markdownIt-Anchor" href="#to-implement-a-persons-movement-within-a-circular-area-centered-on-themselves-with-a-radius-of-r"></a> To implement a person’s movement within a circular area centered on themselves with a radius of r:</h3><ul><li>Assign a random number within the range [0, r] to represent the distance they will move.</li><li>mobility_range = self.random.randint(0,self.mobility_range) or self.random.uniform(0, self.mobility_range)</li></ul>]]></content>
    
    
    <categories>
      
      <category>study share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ABM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>war_visulization_moran_I</title>
    <link href="/2024/10/24/war_visuliztion/"/>
    <url>/2024/10/24/war_visuliztion/</url>
    
    <content type="html"><![CDATA[<figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-comment">#import the moran&#x27;s I package:</span><br>library<span class="hljs-punctuation">(</span>ape<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="data-source"><a class="markdownIt-Anchor" href="#data-source"></a> Data source</h2><p>The conflict events are sourced from the ‘Armed Conflict Location &amp; Event Data Project’ (ACLED) which records the latitude and longitude, time, actors, and casualty numbers of violent events [4]. We selected the ‘battle’ type of conflict event data from the ACLED database. From January 1, 2023, to October 1, 2024, the ACLED database recorded a total of 7,719 relevant war events in East Asia and Southeast Asia.</p><p>import the data</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs r">getwd<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-comment">#you can use it to find the folder </span><br>setwd<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;D:/R-4.3.1/R.SCRIPT/THE COURSE/VISUALIZATION/assignment-10.24/R-code and data&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-comment">#you can change the file directory.</span><br>war_in_asia<span class="hljs-operator">&lt;-</span>read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;2023-01-01-2024-10-01-East_Asia-Southeast_Asia.csv&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">wardata<span class="hljs-operator">&lt;-</span>data.frame<span class="hljs-punctuation">(</span>war_in_asia<span class="hljs-operator">$</span>fatalities<span class="hljs-punctuation">,</span>war_in_asia<span class="hljs-operator">$</span>latitude<span class="hljs-punctuation">,</span>war_in_asia<span class="hljs-operator">$</span>longitude<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>war_in_asia<span class="hljs-operator">$</span>region<span class="hljs-punctuation">[</span>war_in_asia<span class="hljs-operator">$</span>region<span class="hljs-operator">==</span><span class="hljs-string">&#x27;Southeast Asia&#x27;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">mean<span class="hljs-punctuation">(</span>war_in_asia<span class="hljs-operator">$</span>fatalities<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">median<span class="hljs-punctuation">(</span>war_in_asia<span class="hljs-operator">$</span>fatalities<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">wardata <span class="hljs-operator">&lt;-</span> na.omit<span class="hljs-punctuation">(</span>wardata<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="visualization-of-the-wars"><a class="markdownIt-Anchor" href="#visualization-of-the-wars"></a> visualization of the wars</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs r"><br>longitude <span class="hljs-operator">&lt;-</span> wardata<span class="hljs-operator">$</span>war_in_asia.longitude<br>latitude <span class="hljs-operator">&lt;-</span> wardata<span class="hljs-operator">$</span>war_in_asia.latitude<br><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggmap<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>sp<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>rnaturalearth<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># load the world data</span><br>world <span class="hljs-operator">&lt;-</span> ne_countries<span class="hljs-punctuation">(</span>scale <span class="hljs-operator">=</span> <span class="hljs-string">&quot;medium&quot;</span><span class="hljs-punctuation">,</span> returnclass <span class="hljs-operator">=</span> <span class="hljs-string">&quot;sf&quot;</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># set the world map</span><br>mp <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_sf<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> world<span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> <span class="hljs-string">&quot;gray96&quot;</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">&quot;gray50&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  coord_sf<span class="hljs-punctuation">(</span>crs <span class="hljs-operator">=</span> <span class="hljs-string">&quot;+proj=longlat +datum=WGS84&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_void<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># put the point where wars happened</span><br>size_warpoint <span class="hljs-operator">&lt;-</span> wardata<span class="hljs-operator">$</span>war_in_asia.fatalities<span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>color_warpoint <span class="hljs-operator">&lt;-</span> <span class="hljs-punctuation">(</span>wardata<span class="hljs-operator">$</span>war_in_asia.fatalities <span class="hljs-operator">+</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br><br>mp2 <span class="hljs-operator">&lt;-</span> mp <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> longitude <span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> latitude<span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> size_warpoint<span class="hljs-punctuation">,</span><br>                 color <span class="hljs-operator">=</span> color_warpoint<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_gradient<span class="hljs-punctuation">(</span>low <span class="hljs-operator">=</span> <span class="hljs-string">&quot;pink2&quot;</span><span class="hljs-punctuation">,</span> high <span class="hljs-operator">=</span> <span class="hljs-string">&quot;darkred&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_size<span class="hljs-punctuation">(</span><span class="hljs-built_in">range</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># focus on the research district</span><br>mp3 <span class="hljs-operator">&lt;-</span> mp2 <span class="hljs-operator">+</span><br>  geom_sf<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  coord_sf<span class="hljs-punctuation">(</span>xlim <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">80</span><span class="hljs-punctuation">,</span> <span class="hljs-number">130</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> ylim <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">46</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> expand <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>title <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Wars in East and Southeast Asia&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span><br>    axis.title.x <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>margin <span class="hljs-operator">=</span> margin<span class="hljs-punctuation">(</span>t <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    axis.title.y <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>angle <span class="hljs-operator">=</span> <span class="hljs-number">90</span><span class="hljs-punctuation">,</span>margin <span class="hljs-operator">=</span> margin<span class="hljs-punctuation">(</span>r <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    axis.text.x <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>margin <span class="hljs-operator">=</span> margin<span class="hljs-punctuation">(</span>t <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    axis.text.y <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>margin <span class="hljs-operator">=</span> margin<span class="hljs-punctuation">(</span>r <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    panel.grid.major <span class="hljs-operator">=</span> element_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">&quot;gray90&quot;</span><span class="hljs-punctuation">,</span> linewidth <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    panel.grid.minor <span class="hljs-operator">=</span> element_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">&quot;gray95&quot;</span><span class="hljs-punctuation">,</span> linewidth <span class="hljs-operator">=</span> <span class="hljs-number">0.25</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># show the map</span><br>mp3<br></code></pre></td></tr></table></figure><p><img src="/image/bg/wardistributionplot.png" alt="" /></p><h2 id="morans-i-index"><a class="markdownIt-Anchor" href="#morans-i-index"></a> moran’s I index</h2><p>This study aims to investigate whether the intensity of wars in the East Asia-Southeast Asia region is related to spatial factors:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs r">warplace.dists <span class="hljs-operator">&lt;-</span> as.matrix<span class="hljs-punctuation">(</span>dist<span class="hljs-punctuation">(</span>cbind<span class="hljs-punctuation">(</span>wardata<span class="hljs-operator">$</span>war_in_asia.latitude<span class="hljs-punctuation">,</span> wardata<span class="hljs-operator">$</span>war_in_asia.longitude<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>warplace.dists.inv <span class="hljs-operator">&lt;-</span> 1<span class="hljs-operator">/</span>warplace.dists<br><br>diag<span class="hljs-punctuation">(</span>warplace.dists.inv<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-number">0</span><br>warplace.dists.inv<span class="hljs-punctuation">[</span><span class="hljs-built_in">is.infinite</span><span class="hljs-punctuation">(</span>warplace.dists.inv<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-number">0</span><br>MoranItest_result<span class="hljs-operator">&lt;-</span>Moran.I<span class="hljs-punctuation">(</span>wardata<span class="hljs-operator">$</span>war_in_asia.fatalities<span class="hljs-punctuation">,</span>warplace.dists.inv<span class="hljs-punctuation">)</span><br><br>MoranItest_result<br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs r">write.csv<span class="hljs-punctuation">(</span>MoranItest_result<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;moranIoutput.csv&quot;</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>study share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>visulization</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Entropy method study</title>
    <link href="/2024/09/04/entropy_study/"/>
    <url>/2024/09/04/entropy_study/</url>
    
    <content type="html"><![CDATA[<hr /><h1 id="index-construction-wirh-entropy-method用熵值法研究指标构建"><a class="markdownIt-Anchor" href="#index-construction-wirh-entropy-method用熵值法研究指标构建"></a> index construction wirh entropy method(用熵值法研究指标构建)</h1><p>熵值法是什么：核心思路就是判断各个指标在所有指标中的地位</p><h2 id="1dataframe构造一个简单的指标体系的数据集"><a class="markdownIt-Anchor" href="#1dataframe构造一个简单的指标体系的数据集"></a> 1.dataframe(构造一个简单的指标体系的数据集)</h2><p>we simply select several indicators:<br />简单地选择几个指标：卫生、文化、交通、教育、饮食、环境6个，如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-comment">##先设置几个指标：指标是列j，地区是行i</span><br>indi_health<span class="hljs-operator">&lt;-</span> runif<span class="hljs-punctuation">(</span><span class="hljs-number">50</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">50</span><span class="hljs-punctuation">)</span> <br>indi_culture<span class="hljs-operator">&lt;-</span> runif<span class="hljs-punctuation">(</span><span class="hljs-number">50</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">16.2</span><span class="hljs-punctuation">)</span><br>indi_jiaotong<span class="hljs-operator">&lt;-</span> runif<span class="hljs-punctuation">(</span><span class="hljs-number">50</span><span class="hljs-punctuation">,</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span><span class="hljs-number">200</span><span class="hljs-punctuation">)</span><br>indi_edu<span class="hljs-operator">&lt;-</span>runif<span class="hljs-punctuation">(</span><span class="hljs-number">50</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">50</span><span class="hljs-punctuation">)</span><br>indi_mm<span class="hljs-operator">&lt;-</span>runif<span class="hljs-punctuation">(</span><span class="hljs-number">50</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">50</span><span class="hljs-punctuation">)</span><br>indi_environ<span class="hljs-operator">&lt;-</span>runif<span class="hljs-punctuation">(</span><span class="hljs-number">50</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">50</span><span class="hljs-punctuation">)</span><br><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-comment">#把这些指标合在一起成为一个df</span><br>df_public1<span class="hljs-operator">&lt;-</span>data.frame<span class="hljs-punctuation">(</span><br>  indi_culture<span class="hljs-punctuation">,</span><br>  indi_edu<span class="hljs-punctuation">,</span><br>  indi_health<span class="hljs-punctuation">,</span><br>  indi_jiaotong<span class="hljs-punctuation">,</span><br>  indi_mm<span class="hljs-punctuation">,</span><br>  indi_environ<br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="2处理数据min_max或者z_score方法"><a class="markdownIt-Anchor" href="#2处理数据min_max或者z_score方法"></a> 2.处理数据：min_max或者z_score方法</h2><p>这里我们选择大多数论文中选择的min_max方法</p><p>设置处理数据的函数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs r">min.max.norm <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-punctuation">(</span>x<span class="hljs-operator">-</span><span class="hljs-built_in">min</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">/</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">max</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-operator">-</span><span class="hljs-built_in">min</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br><br>max.min.norm <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-punctuation">(</span><span class="hljs-built_in">max</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-operator">-</span>x<span class="hljs-punctuation">)</span><span class="hljs-operator">/</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">max</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-operator">-</span><span class="hljs-built_in">min</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br><br>scaledata_z <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>df_public1<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>min.max.norm<span class="hljs-punctuation">)</span>  <span class="hljs-comment">#正向指标</span><br>scaledata_f <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>df_public1<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>max.min.norm<span class="hljs-punctuation">)</span>   <span class="hljs-comment">#负向指标</span><br>  <br>public_1 <span class="hljs-operator">&lt;-</span> cbind<span class="hljs-punctuation">(</span>scaledata_z<span class="hljs-punctuation">,</span>scaledata_f<span class="hljs-punctuation">)</span><br><br></code></pre></td></tr></table></figure><h2 id="3进入熵值法的函数构建"><a class="markdownIt-Anchor" href="#3进入熵值法的函数构建"></a> 3.进入熵值法的函数构建</h2><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>首先，我们的目的是</mtext><mo>:</mo><mtext>得到各指标的权重，从而计算各地区的指标综合得分</mtext><mspace linebreak="newline"></mspace><mtext>权重：</mtext><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><mfrac><msub><mi>g</mi><mi>j</mi></msub><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><msub><mi>g</mi><mi>j</mi></msub></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>计算得分：</mtext><msub><mi>s</mi><mi>i</mi></msub><mo>=</mo><mn>100</mn><mo>×</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>p</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>p</mi><mrow><mi>i</mi><mn>2</mn></mrow></msub><mo>+</mo><mo>…</mo><mtext> </mtext><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>变异系数：</mtext><msub><mi>g</mi><mi>j</mi></msub><mo>=</mo><mn>1</mn><mo>−</mo><msub><mi>e</mi><mi>j</mi></msub><mspace linebreak="newline"></mspace><mtext>熵值：</mtext><msub><mi>e</mi><mi>j</mi></msub><mo>=</mo><mo>−</mo><mi>k</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">首先，我们的目的是:得到各指标的权重，从而计算各地区的指标综合得分\\权重：w_{j}=\frac{g_{j}}{\sum_{j=1}^{m}g_{j}} \\计算得分：s_{i}=100\times(w_{1}p_{i1}+w_{2}p_{i2}+\dots)\\变异系数：g_{j}=1-e_{j}\\熵值：e_{j}=-k\sum_{i=1}^{n}p_{ij}ln(p_{ij}),k=1/ln(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">首</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">目</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">是</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">各</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">权</span><span class="mord cjk_fallback">重</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">从</span><span class="mord cjk_fallback">而</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">各</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">区</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">综</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">分</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">权</span><span class="mord cjk_fallback">重</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.23767em;vertical-align:-1.1301100000000002em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.305708em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1301100000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">异</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">熵</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><h3 id="1计算指标比重p_ij"><a class="markdownIt-Anchor" href="#1计算指标比重p_ij"></a> (1)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>计算指标比重</mtext><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">计算指标比重P_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">重</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs &#123;r&#125;">first1 &lt;- function(data)<br>&#123;<br>  x &lt;- c(data)<br>  for(i in 1:length(data))<br>    x[i] = data[i]/sum(data[])<br>  return(x)<br>&#125;<br>df_pij &lt;- apply(public_1,2,first1)<br><br></code></pre></td></tr></table></figure><h3 id="2-计算熵值e_j"><a class="markdownIt-Anchor" href="#2-计算熵值e_j"></a> (2) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>计算熵值</mtext><msub><mi>e</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">计算熵值e_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">熵</span><span class="mord cjk_fallback">值</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs &#123;r&#125;">first2 &lt;- function(data)<br>&#123;<br>  x &lt;- c(data)<br>  for(i in 1:length(data))&#123;<br>    if(data[i] == 0)&#123;<br>      x[i] = 0<br>    &#125;else&#123;<br>      x[i] = data[i] * log(data[i])<br>    &#125;<br>  &#125;<br>  return(x)<br>&#125;<br>dataframe1 &lt;- apply(df_pij,2,first2)<br><br>k &lt;- 1/log(length(dataframe1[,1]))<br>e_j1&lt;- -k * colSums(dataframe1)<br>e_j1<br></code></pre></td></tr></table></figure><h3 id="3-计算差异系数g_j"><a class="markdownIt-Anchor" href="#3-计算差异系数g_j"></a> (3) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>计算差异系数</mtext><msub><mi>g</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">计算差异系数g_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">差</span><span class="mord cjk_fallback">异</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">数</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs &#123;r&#125;">g_0&lt;- 1-e_j1 <br>g_0<br><br></code></pre></td></tr></table></figure><p>此时我们可以明显地看出数值上的不同！！！</p><h3 id="4-计算指标权重w_j"><a class="markdownIt-Anchor" href="#4-计算指标权重w_j"></a> (4) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>计算指标权重</mtext><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">计算指标权重w_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">权</span><span class="mord cjk_fallback">重</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs &#123;r&#125;">w_j&lt;-g_0/sum(g_0)<br>w_j<br><br></code></pre></td></tr></table></figure><h3 id="5-计算最后各地区的得分s_i"><a class="markdownIt-Anchor" href="#5-计算最后各地区的得分s_i"></a> (5) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>计算最后各地区的得分</mtext><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">计算最后各地区的得分s_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">各</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">区</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">分</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs &#123;r&#125;">mat3 &lt;- as.matrix(df_pij)<br>mat4&lt;- as.matrix(w_j)<br>si1&lt;-mat3 %*% mat4*100<br>si1<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>study share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Entropy method</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hello world</title>
    <link href="/2024/09/03/hello-world/"/>
    <url>/2024/09/03/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
