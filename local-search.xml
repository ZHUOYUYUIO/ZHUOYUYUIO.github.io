<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>mesa-geo introduction</title>
    <link href="/2024/11/12/mesa-geo-introduction/"/>
    <url>/2024/11/12/mesa-geo-introduction/</url>
    
    <content type="html"><![CDATA[<h1 id="this-is-a-study-share-or-tutorial-for-mesa-geo-study-beginner"><a href="#this-is-a-study-share-or-tutorial-for-mesa-geo-study-beginner" class="headerlink" title="this is a study share or tutorial for mesa-geo study beginner"></a>this is a study share or tutorial for mesa-geo study beginner</h1><h2 id="an-interesting-metaphor"><a href="#an-interesting-metaphor" class="headerlink" title="an interesting metaphor:"></a>an interesting metaphor:</h2><p><img src="/image/bg/blog1.png"><br> （You’re Under Arrest!——anime） Natsumi is a female police officer with short hair, while Miyuki is a female police officer who is driving. They are traffic police officers and spend most of their time executing tasks together, with a smaller portion of time spent separately.</p><p>When executing tasks separately, Miyuki’s greetings to Natsumi:</p><ul><li>Moshi moshi!</li><li>Natsumi, which district of Tokyo are you in now? Are you still on duty there? How far is it from where you are to the Motodome Police Station? What are you planning to do after your shift? Are you heading back to Motodome?</li></ul><p>At this moment, Tokyo is the city where Natsumi and Miyuki are located, but they are in different areas, which can be regarded as neighborhood agents or region agents.</p><p>When we consider Natsumi as a person agent, her name “Natsumi” is actually a unique ID.</p><p>“What are you planning to do after your shift?” can actually be seen as what the next step is, or simply “step”.</p><p>The interaction between Natsumi, Miyuki, and the city constitutes the model among agents. We need to place them and the city into both spatial and temporal sequences.</p><h2 id="1-introduction-of-mesa-geo-package"><a href="#1-introduction-of-mesa-geo-package" class="headerlink" title="1.introduction of mesa-geo package"></a>1.introduction of mesa-geo package</h2><ul><li>with mesa-geo, we can build build a geosapce which can <strong>contain</strong> or support <strong>gis Agents</strong></li><li>Compared to traditional Agents, geoAgents have more <strong>geometry attributes</strong>: shapely, <strong>CRS</strong> coordinate system…</li></ul><p>the geo_data mesa-geo use:</p><ul><li>we can directly use shapely package to create a geometry object <strong>on our own</strong>.</li><li>we can also import existing geometric objects -&gt; vector data: shp, geojson, geodataframe.</li></ul><p>for example:</p><ul><li>Use the point function from the shapely package to generate corresponding coordinate points for the person agent.</li><li>Directly import the regional data of any place.</li></ul><h2 id="2-the-existing-geometric-data-which-can-be-used-by-mesa-geo"><a href="#2-the-existing-geometric-data-which-can-be-used-by-mesa-geo" class="headerlink" title="2.the existing geometric data which can be used by mesa-geo"></a>2.the existing geometric data which can be used by mesa-geo</h2><h3 id="raster-data"><a href="#raster-data" class="headerlink" title="raster data"></a>raster data</h3><ul><li>Divided into a grid and segmented into individual pixels, which ensures a uniform format and facilitates uniform operations.</li><li>Detailed representation of various features, resulting in large data volumes.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> rasterio  <br><span class="hljs-comment">#open the rasterio  </span><br>ds=rasterio.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;\...\...tif&#x27;</span>) <br></code></pre></td></tr></table></figure><h3 id="vector-data"><a href="#vector-data" class="headerlink" title="vector data"></a>vector data</h3><ul><li>Only stores geographic objects such as points, point lists, and related features, resulting in smaller data volumes.</li><li>Accurately represents point-line-plane elements.</li><li>Facilitates modification and editing.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> geopandas <span class="hljs-keyword">as</span> gpd  <br>gdf = gpd.read_file(<span class="hljs-string">&#x27;\...\...\...shp&#x27;</span>) <br><br><br><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-comment"># read the geojson data</span><br>file_path = <span class="hljs-string">&#x27;\...geojson&#x27;</span><br>file_path = <span class="hljs-string">&quot;\...\....geojson&quot;</span><br>gdf_0 = gpd.read_file(file_path)<br><br><span class="hljs-comment"># draw the map</span><br>fig, ax = plt.subplots(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, figsize=(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>))<br>gdf_0.plot(ax=ax, alpha=<span class="hljs-number">0.5</span>, edgecolor=<span class="hljs-string">&#x27;k&#x27;</span>)<br>ax.set_title(<span class="hljs-string">&#x27;regions&#x27;</span>)<br>ax.set_xlabel(<span class="hljs-string">&#x27;Longitude&#x27;</span>)<br>ax.set_ylabel(<span class="hljs-string">&#x27;Latitude&#x27;</span>)<br><br><span class="hljs-comment"># show the map</span><br>plt.show()<br></code></pre></td></tr></table></figure><h2 id="3-what-is-GeoAgent-how-to-use-the-geo-data"><a href="#3-what-is-GeoAgent-how-to-use-the-geo-data" class="headerlink" title="3.what is GeoAgent?&#x2F;how to use the geo_data?"></a>3.what is GeoAgent?&#x2F;how to use the geo_data?</h2><p>what can be done with these geo_data in mesa-geo?</p><p>put the GeoAgents <strong>into the geospace</strong>! this geo_data are the location where agents are. </p><p>however, before we put the GeoAgent into the geospace, let’s figure it out what is GeoAgent.</p><h3 id="GeoAgent"><a href="#GeoAgent" class="headerlink" title="GeoAgent:"></a>GeoAgent:</h3><p>GeoAgent has different kinds of attributes: unique_id, model where the agents are put, geometry, crs</p><p>GeoAgent <strong>can be</strong> buildings, people and others all you hope they have locations in your simulation process.</p><h3 id="Allocate-a-location-geographic-object-to-every-GeoAgent"><a href="#Allocate-a-location-geographic-object-to-every-GeoAgent" class="headerlink" title="Allocate a location(geographic object) to every GeoAgent:"></a>Allocate a location(geographic object) to every GeoAgent:</h3><p>there are several ways:</p><ul><li>using the geo_file we methioned</li><li>using the geometry</li></ul>]]></content>
    
    
    <categories>
      
      <category>study share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ABM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/11/12/hello-world/"/>
    <url>/2024/11/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
